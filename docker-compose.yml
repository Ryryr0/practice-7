services:
  nginx:
    build:
      context: ./nginx
    container_name: nginx_server
    ports:
      - "8080:80"
    depends_on:
      - apache
    volumes:
      - ./nginx/static:/etc/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - my_network
    restart: always

  db:
    image: mysql:latest
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: users_db
      MYSQL_USER: user
      MYSQL_PASSWORD: 1234
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - db-data:/var/lib/mysql # том для хранения данных между презапусками
    ports:
      - "8082:80"
    networks:
      - my_network
    restart: always

  apache:
    container_name: apache_server
    build:
      context: ./apache
    ports:
      - "8081:80"
    volumes:
      - ./apache/src:/var/www/html/src
      - ./apache/000-default.conf:/etc/apache2/sites-available/000-default.conf
      - ./apache/php.ini:/usr/local/etc/php/php.ini
      - ./apache/composer.json:/var/www/html/composer.json
    depends_on:
      - db
    networks:
      - my_network
    restart: always

  redis:
    image: redis:latest
    container_name: redis_db
    restart: always
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

# создание того самого тома
volumes:
  db-data: